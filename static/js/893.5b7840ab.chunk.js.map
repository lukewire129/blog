{"version":3,"file":"static/js/893.5b7840ab.chunk.js","mappings":"4LAGA,SAASA,EAAQC,GACf,MACMC,EADM,IAAIC,KACG,IAAIA,KAAKF,GAEtBG,EAAUC,KAAKC,MAAMJ,EAAO,KAC5BK,EAAUF,KAAKC,MAAMF,EAAU,IAC/BI,EAAQH,KAAKC,MAAMC,EAAU,IAC7BE,EAAOJ,KAAKC,MAAME,EAAQ,IAC1BE,EAAQL,KAAKC,MAAMG,EAAO,GAC1BE,EAASN,KAAKC,MAAMG,EAAO,IAEjC,OAAIE,EAAS,EACJ,GAAGA,iBACDD,EAAQ,EACV,GAAGA,gBACDD,EAAO,EACT,GAAGA,eACDD,EAAQ,EACV,GAAGA,gBACDD,EAAU,EACZ,GAAGA,kBAEH,GAAGH,iBAEd,CACA,MAAMQ,GAAWC,EAAAA,EAAAA,IAAOC,EAAAA,GAAK;;;;;EAqB7B,QAfA,SAAkBC,GAChB,MAAM,KAAEC,GAASD,EAEjB,OACEE,EAAAA,EAAAA,MAAA,OAAKC,MAAO,CAAEC,SAAU,QAASC,eAAgB,UAAWC,SAAA,EAC1DC,EAAAA,EAAAA,KAACV,EAAQ,CAACW,GAAG,cAAcC,MAAO,CAAER,KAAMA,EAAKS,MAAOJ,SACnDL,EAAKU,SAASC,SAEjBL,EAAAA,EAAAA,KAAA,KAAGJ,MAAO,CAAEU,SAAU,QAASP,SAAErB,EAAQgB,EAAKU,SAASzB,SACvDqB,EAAAA,EAAAA,KAAA,KAAGJ,MAAO,CAAEU,SAAU,QAASP,SAAEL,EAAKU,SAASG,YAC/CP,EAAAA,EAAAA,KAAA,MAAIJ,MAAO,CAAEY,WAAY,UAAWC,OAAQ,MAAOC,OAAQ,SAGjE,EC3BA,QAbA,SAAkBjB,GAChB,MAAM,KAAEkB,GAASlB,EACjB,OACEO,EAAAA,EAAAA,KAAA,OAAKJ,MAAO,CAAEgB,MAAO,YAAaC,QAAS,UAAWd,SACnDY,GACCA,EAAKG,KAAKC,GAXlB,SAAiBC,GACf,IAAK,IAAIC,KAAOD,EACd,OAAO,EAET,OAAO,CACT,CAOcE,CAAQH,EAAKX,UAAkB,MAC5BJ,EAAAA,EAAAA,KAACmB,EAAQ,CAACzB,KAAMqB,OAIjC,ECMA,QApBA,WACE,MAAOJ,EAAMS,IAAWC,EAAAA,EAAAA,UAAS,IAYjC,OAXAC,EAAAA,EAAAA,YAAU,KACRC,EAAAA,EAAOC,IAAI,qBAAqBC,MAAMC,IACpC,MAAM,KAAEC,EAAI,KAAEjC,GAASgC,EACvBE,QAAQC,IAAInC,GACZ0B,EACE1B,EAAKoC,MAAMC,MACT,CAACC,EAAGC,IAAM,IAAIpD,KAAKoD,EAAE7B,SAASzB,MAAQ,IAAIE,KAAKmD,EAAE5B,SAASzB,QAE7D,GACD,GACD,KAEDqB,EAAAA,EAAAA,KAAA,OAAKJ,MAAO,CAAEE,eAAgB,SAAUoC,QAAS,QAASnC,UACxDC,EAAAA,EAAAA,KAACmC,EAAQ,CAACxB,KAAMA,KAGtB,C,iCCpBO,MAAMY,E,OAASa,EAAMC,OAAO,CACjCC,QAAS,iC","sources":["components/BlogPost.jsx","components/BlogList.jsx","pages/BlogPage.jsx","utils/socket.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nfunction timeAgo(date) {\r\n  const now = new Date();\r\n  const diff = now - new Date(date); // 현재 날짜와 특정 날짜 간의 시간 차이 (밀리초)\r\n\r\n  const seconds = Math.floor(diff / 1000);\r\n  const minutes = Math.floor(seconds / 60);\r\n  const hours = Math.floor(minutes / 60);\r\n  const days = Math.floor(hours / 24);\r\n  const weeks = Math.floor(days / 7);\r\n  const months = Math.floor(days / 30); // 대략적인 월 계산 (30일 기준)\r\n\r\n  if (months > 0) {\r\n    return `${months} month(s) ago`;\r\n  } else if (weeks > 0) {\r\n    return `${weeks} week(s) ago`;\r\n  } else if (days > 0) {\r\n    return `${days} day(s) ago`;\r\n  } else if (hours > 0) {\r\n    return `${hours} hour(s) ago`;\r\n  } else if (minutes > 0) {\r\n    return `${minutes} minute(s) ago`;\r\n  } else {\r\n    return `${seconds} second(s) ago`;\r\n  }\r\n}\r\nconst LinkItem = styled(Link)`\r\n  color: gray;\r\n  font-size: 24px;\r\n  text-decoration: none;\r\n  cursor: pointer;\r\n`;\r\nfunction BlogPost(props) {\r\n  const { data } = props;\r\n\r\n  return (\r\n    <div style={{ minWidth: \"769px\", justifyContent: \"center\" }}>\r\n      <LinkItem to=\"/postdetail\" state={{ data: data.path }}>\r\n        {data.metadata.title}\r\n      </LinkItem>\r\n      <p style={{ fontSize: \"18px\" }}>{timeAgo(data.metadata.date)}</p>\r\n      <p style={{ fontSize: \"18px\" }}>{data.metadata.subtitle}</p>\r\n      <hr style={{ background: \"#f5f5f5\", height: \"1px\", border: \"0\" }} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BlogPost;\r\n","import BlogPost from \"./BlogPost\";\r\nfunction isEmpty(obj) {\r\n  for (let key in obj) {\r\n    return false;\r\n  }\r\n  return true;\r\n}\r\nfunction BlogList(props) {\r\n  const { post } = props;\r\n  return (\r\n    <div style={{ width: \"58.33333%\", padding: \".75rem\" }}>\r\n      {post &&\r\n        post.map((item) => {\r\n          if (isEmpty(item.metadata)) return null;\r\n          return <BlogPost data={item} />;\r\n        })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BlogList;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { socket } from \"../utils/socket\";\r\nimport BlogList from \"../components/BlogList\";\r\n\r\nfunction BlogPage() {\r\n  const [post, setPost] = useState([]);\r\n  useEffect(() => {\r\n    socket.get(\"/recentblogs.json\").then((response) => {\r\n      const { code, data } = response;\r\n      console.log(data);\r\n      setPost(\r\n        data.files.sort(\r\n          (a, b) => new Date(b.metadata.date) - new Date(a.metadata.date)\r\n        )\r\n      );\r\n    });\r\n  }, []);\r\n  return (\r\n    <div style={{ justifyContent: \"center\", display: \"flex\" }}>\r\n      <BlogList post={post} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BlogPage;\r\n","import axios from \"axios\";\r\n\r\nexport const socket = axios.create({\r\n  baseURL: \"https://lukewire129.github.io\",\r\n});\r\n"],"names":["timeAgo","date","diff","Date","seconds","Math","floor","minutes","hours","days","weeks","months","LinkItem","styled","Link","props","data","_jsxs","style","minWidth","justifyContent","children","_jsx","to","state","path","metadata","title","fontSize","subtitle","background","height","border","post","width","padding","map","item","obj","key","isEmpty","BlogPost","setPost","useState","useEffect","socket","get","then","response","code","console","log","files","sort","a","b","display","BlogList","axios","create","baseURL"],"sourceRoot":""}