{"version":3,"file":"static/js/785.e1cb78e6.chunk.js","mappings":"wJAEO,MAAMA,E,OAASC,EAAMC,OAAO,CACjCC,QAAS,kC,aCAX,SAASC,EAAQC,GACf,MACMC,EADM,IAAIC,KACG,IAAIA,KAAKF,GAEtBG,EAAUC,KAAKC,MAAMJ,EAAO,KAC5BK,EAAUF,KAAKC,MAAMF,EAAU,IAC/BI,EAAQH,KAAKC,MAAMC,EAAU,IAC7BE,EAAOJ,KAAKC,MAAME,EAAQ,IAC1BE,EAAQL,KAAKC,MAAMG,EAAO,GAC1BE,EAASN,KAAKC,MAAMG,EAAO,IAEjC,OAAIE,EAAS,EACJ,GAAGA,iBACDD,EAAQ,EACV,GAAGA,gBACDD,EAAO,EACT,GAAGA,eACDD,EAAQ,EACV,GAAGA,gBACDD,EAAU,EACZ,GAAGA,kBAEH,GAAGH,iBAEd,CAsCA,QA9BA,WACE,MAAOQ,EAAMC,IAAWC,EAAAA,EAAAA,UAAS,IAQjC,OAPAC,EAAAA,EAAAA,YAAU,KACRnB,EAAOoB,IAAI,qBAAqBC,MAAMC,IACpC,MAAM,KAAEC,EAAI,KAAEC,GAASF,EACvBG,QAAQC,IAAIF,GACZP,EAAQO,EAAKG,MAAM,GACnB,GACD,KAEDC,EAAAA,EAAAA,MAAA,OAAAC,SAAA,CACG,IACAb,GACCA,EAAKc,KAAKC,GApBlB,SAAiBC,GACf,IAAK,IAAIC,KAAOD,EAEd,OAAO,EAET,OAAO,CACT,CAecE,CAAQH,EAAKI,UAAkB,MAEjCP,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEO,EAAAA,EAAAA,KAAA,UAAQC,MAAO,CAAEC,SAAU,QAAST,SACjCE,EAAKI,SAASI,SAEjBH,EAAAA,EAAAA,KAAA,SAAOC,MAAO,CAAEC,SAAU,QAAST,SAChCzB,EAAQ2B,EAAKI,SAAS9B,eAOvC,C","sources":["utils/socket.js","pages/HomePage.jsx"],"sourcesContent":["import axios from \"axios\";\r\n\r\nexport const socket = axios.create({\r\n  baseURL: \"https://lukewire129.github.io\",\r\n});\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport { socket } from \"../utils/socket\";\r\nfunction timeAgo(date) {\r\n  const now = new Date();\r\n  const diff = now - new Date(date); // 현재 날짜와 특정 날짜 간의 시간 차이 (밀리초)\r\n\r\n  const seconds = Math.floor(diff / 1000);\r\n  const minutes = Math.floor(seconds / 60);\r\n  const hours = Math.floor(minutes / 60);\r\n  const days = Math.floor(hours / 24);\r\n  const weeks = Math.floor(days / 7);\r\n  const months = Math.floor(days / 30); // 대략적인 월 계산 (30일 기준)\r\n\r\n  if (months > 0) {\r\n    return `${months} month(s) ago`;\r\n  } else if (weeks > 0) {\r\n    return `${weeks} week(s) ago`;\r\n  } else if (days > 0) {\r\n    return `${days} day(s) ago`;\r\n  } else if (hours > 0) {\r\n    return `${hours} hour(s) ago`;\r\n  } else if (minutes > 0) {\r\n    return `${minutes} minute(s) ago`;\r\n  } else {\r\n    return `${seconds} second(s) ago`;\r\n  }\r\n}\r\nfunction isEmpty(obj) {\r\n  for (let key in obj) {\r\n    // if the loop has started, there is a property\r\n    return false;\r\n  }\r\n  return true;\r\n}\r\nfunction HomePage() {\r\n  const [post, setPost] = useState([]);\r\n  useEffect(() => {\r\n    socket.get(\"/recentblogs.json\").then((response) => {\r\n      const { code, data } = response;\r\n      console.log(data);\r\n      setPost(data.files);\r\n    });\r\n  }, []);\r\n  return (\r\n    <div>\r\n      {\" \"}\r\n      {post &&\r\n        post.map((item) => {\r\n          if (isEmpty(item.metadata)) return null;\r\n          return (\r\n            <div>\r\n              <strong style={{ fontSize: \"32px\" }}>\r\n                {item.metadata.title}\r\n              </strong>\r\n              <small style={{ fontSize: \"24px\" }}>\r\n                {timeAgo(item.metadata.date)}\r\n              </small>\r\n            </div>\r\n          );\r\n        })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HomePage;\r\n"],"names":["socket","axios","create","baseURL","timeAgo","date","diff","Date","seconds","Math","floor","minutes","hours","days","weeks","months","post","setPost","useState","useEffect","get","then","response","code","data","console","log","files","_jsxs","children","map","item","obj","key","isEmpty","metadata","_jsx","style","fontSize","title"],"sourceRoot":""}